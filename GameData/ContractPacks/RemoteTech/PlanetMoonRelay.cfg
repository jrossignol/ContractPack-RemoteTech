// Contract for setting up a network for a planetary moon.
//   Author: nightingale

CONTRACT_TYPE:NEEDS[RemoteTech]
{
    name = RT_PlanetMoonRelay

    sortKey = "03." + @combinedKey

    title = Create a network for @targetBody
    description = @isIke ? @descIke : @descDefault
    synopsis = Build a communication network that provides coverage of @targetBody with a link back to mission control.
    completedMessage = The network is up and transmitting, and our shake-out testing is complete!

    group = RemoteTech

    // Level 2 prestige
    prestige = Significant

    targetBody = @targetMoon

    // Always offered by CommSat Group
    agent = Communication Satellite Group

    // Can only do this contract once
    maxCompletions = 1

    // Contract rewards
    rewardReputation = 1.0
    rewardFunds = @advanceFunds * 3.0
    advanceFunds = 70000.0
    
    DATA_EXPAND
    {
        type = CelestialBody

        targetMoon = AllBodies().Where(cb => cb.IsMoon() && cb.Parent().Children().Count() < 3 && cb.Parent() != HomeWorld())
    }

    DATA
    {
        type = string

        parentKey = @targetBody.Parent().Index().ToString("D2")
        moonKey = @targetBody.Index().ToString("D2")
        combinedKey = @parentKey + @moonKey

        descDefault = They say there's no point to setting up a relay for @targetMoon.  We say otherwise!  Set up a communication network for us.
        descIke = They say there's some sort of "magic boulder" near Ike.  Let's check it out!  Set up a communication network for us.
    }

    DATA
    {
        type = bool

        isIke = @targetMoon.Name() == "Ike"
    }

    PARAMETER
    {
        type = CelestialBodyCoverage

        targetBody = @/targetMoon

        coverage = 0.95
    }

    PARAMETER
    {
        name = Duration
        type = Duration

        duration = 7d

        preWaitText = Testing time after network up
        waitingText = Performing shake-out testing
        completionText = Shake-out testing completed
    }

    
    REQUIREMENT
    {
        name = CelestialBodyCoverage
        type = CelestialBodyCoverage

        targetBody = HomeWorld()

        minCoverage = 0.7
        maxCoverage = 1.0
    }

    REQUIREMENT
    {
        type = CelestialBodyCoverage

        targetBody = @/targetMoon.Parent()

        minCoverage = 0.7
        maxCoverage = 1.0
    }

    REQUIREMENT
    {
        type = CelestialBodyCoverage

        maxCoverage = 0.9
    }
}
